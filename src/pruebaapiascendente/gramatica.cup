import java_cup.runtime.*;
import vistdsapixmlcreator.Writer;
import vistdsapixmlcreator.Paso;
import vistdsapixmlcreator.Node;



action code
{:
Writer writer = new Writer("./gramatica.txt","./ascendent","cadenaDePrueba.txt",false);
:}

terminal String number;
terminal mas, por, puntoComa;
non terminal Number NUMBER;
non terminal Por POR;
non terminal PuntoComa PUNTOCOMA;
non terminal Mas MAS;
non terminal EXP1;
non terminal Exp EXP;
non terminal A A;
non terminal B B;
non terminal C C;


EXP1 ::= EXP:exp {:
    System.out.println(exp.getValue());    
    writer.writeXML();
:};

EXP ::= B:b A:a PUNTOCOMA:puntocoma {:
    Exp exp=new Exp();
    writer.addPasoNoTerminal("Exp", "null", Integer.parseInt(b.getValue())+Integer.parseInt(a.getValue()), "EXP::= B A ;", exp, b, a, puntocoma);    
    RESULT=exp;
  
:};

A ::= MAS:mas B:b A:a1 {:
    A a=new A();
    writer.addPasoNoTerminal("A", "result", Integer.parseInt(b.getValue())+Integer.parseInt(a1.getValue()), "A::= + B A", a, mas, b, a1); 
    RESULT=a;
:}

| {:
    A a=new A();
    writer.addPasoLambda("A1", "result", 0, a);
    RESULT=a;
:};

B ::= NUMBER:number C:c {:
    B b=new B();
    writer.addPasoNoTerminal("B", "result", Integer.parseInt(number.getValue())*Integer.parseInt(c.getValue()), "B::= num C", b, number, c); 
    RESULT=b;
:};

C ::= POR:por NUMBER:number C:c1 {:
    C c=new C();
    writer.addPasoNoTerminal("C", "result", Integer.parseInt(number.getValue())*Integer.parseInt(c1.getValue()), "C::= por num C1", c, por, number, c1); 
    RESULT=c;
:}

| {:
    C c=new C();
    writer.addPasoLambda("C1", "result", 1, c);
    RESULT=c;
:};
NUMBER ::= number:numberid {:
    Number n=new Number();
    writer.addPasoTerminal("number", null, numberid, n);
    RESULT=n;
:};

POR ::= por:porid {:
    Por p=new Por();
    writer.addPasoTerminal(porid, null, p);
    RESULT=p;
:};

PUNTOCOMA ::= puntoComa:puntoComaid {:
    PuntoComa p=new PuntoComa();
    writer.addPasoTerminal(puntoComaid, null, p);
    RESULT=p;
:};

MAS ::= mas:masid {:
    Mas m=new Mas();
    writer.addPasoTerminal(masid, null, m);
    RESULT=m;
:};

